# This is the conf for the starbug.com nginx reverse proxy
#
# ASSUMES:  aai.starbug.com_00 and obsui-gunicorn-00 are running on nginx-proxy network
#
# TODO: use orchestration tool to set names

server {

    server_name  starbug.com aai.starbug.com db.starbug.com www.starbug.com;

    listen 80;
    listen [::]:80;


    # from etc/nginx/snippets/letsencrypt-acme-challenge.conf;

    location ^~ /.well-known/acme-challenge/ {
      default_type "text/plain";
      root         /opt/starbug.com/www;
    }

    # Hide /acme-challenge subdirectory and return 404 on all requests.
    location = /.well-known/acme-challenge/ {
      return 404;
    }

    # the rest to TLS
    location / {
      return 301 https://www.starbug.com$request_uri;
    }

}


server {

    server_name starbug.com www.starbug.com;

    listen      443 ssl http2;
    listen      [::]:443 ssl http2;

    root /opt/starbug.com/www; # from Dockerfile.nginx
    index index.html;

    # letsencrypt
    ssl_certificate /etc/letsencrypt/live/starbug.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/starbug.com/privkey.pem;

    include /etc/nginx/conf.d/starbug.tls.conf;

    # static content
    location / {
	try_files $uri $uri/ =404;
    }


    location ~* \.(js|jpg|png|css)$ {
	root /opt/starbug.com/www; # from Dockerfile.nginx
	expires 30d;
    }

}


server {

    server_name aai.starbug.com;

    listen      443 ssl http2;
    listen      [::]:443 ssl http2;

    # letsencrypt
    ssl_certificate /etc/letsencrypt/live/starbug.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/starbug.com/privkey.pem;

    include /etc/nginx/conf.d/starbug.tls.conf;

    # reverse proxy
    location / {

	# TODO Assumes flask container is named aai.starbug.com_00 and running on port 8080
	proxy_pass http://aai.starbug.com_00:8080/;

	# Redefine the header fields that NGINX sends to the upstream server
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Define the maximum file size on file uploads
	client_max_body_size 5M;

    }

}


server {

    server_name db.starbug.com;

    listen      443 ssl http2;
    listen      [::]:443 ssl http2;

    # letsencrypt
    ssl_certificate /etc/letsencrypt/live/starbug.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/starbug.com/privkey.pem;

    include /etc/nginx/conf.d/starbug.tls.conf;

    # reverse proxy
    location / {

	# TODO Assumes flask container is named obsui_00 and running on port 8090
	proxy_pass http://obsui_00:8090/;

	# Redefine the header fields that NGINX sends to the upstream server
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Define the maximum file size on file uploads
	client_max_body_size 5M;

    }

}
