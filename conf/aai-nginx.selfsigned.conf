# This is the conf for the nginx reverse proxy for AAI
#
# AAI TLS content (for browser location) is reverse proxied to the aai gunicorn app.
#
# ASSUMES:  aai-gunicorn-00 running on nginx-proxy network
#

server {

    server_name  www.starbug.com;
    listen       80;

    # see Dockerfile.nginx
    root /opt/starbug.com/www/public_html;

    # static content
    location / {
        index index.html;
    }

}


server {

    server_name  www.starbug.com;
    listen       443 ssl http2;

    # TODO listen [::]:443 ssl http2 default_server;

    # Dockerfile to copy to here
    ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
    ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;


    # https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-16-04
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains";
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    ssl_dhparam /etc/ssl/certs/dhparam.pem;


    # reverse proxy
    location / {

	# TODO Assumes flask container is named aai-gunicorn-00 and running on port 8080
	proxy_pass http://aai-gunicorn-00:8080;

	# Redefine the header fields that NGINX sends to the upstream server
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Define the maximum file size on file uploads
	client_max_body_size 5M;

    }

}
