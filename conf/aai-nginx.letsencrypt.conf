# This is the conf for the nginx reverse proxy for AAI
#
# AAI TLS content (for browser location) is reverse proxied to the aai gunicorn app.
#
# ASSUMES:  aai-gunicorn-00 running on nginx-proxy network
#

server {

    listen       80;
    # TODO listen [::]:80 ipv6only=on; # TODO default_server too?

    server_name  starbug.com www.starbug.com aai.starbug.com;

    # see Dockerfile.nginx
    root /opt/starbug.com/www/public_html;

    index index.html;

    # letsencrypt
    location /.well-known {
	alias /opt/starbug.com/conf/letsencrypt/well-known;
    }

    # static content
    location / {
	try_files $uri $uri/ =404;
    }

}


server {

    listen      443 ssl http2;
    server_name www.starbug.com;

    root /opt/starbug.com/www/public_html; # from Dockerfile.nginx
    index index.html;

    # letsencrypt
    ssl_certificate /etc/letsencrypt/live/starbug.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/starbug.com/privkey.pem;

    include /etc/nginx/conf.d/aai-tls.conf;

    # letsencrypt for renewals
    location /.well-known {
	alias /opt/starbug.com/conf/letsencrypt/well-known;
    }

    # static content
    location / {
	try_files $uri $uri/ =404;
    }

}


server {

    listen      443 ssl http2;
    server_name aai.starbug.com;

    root /opt/starbug.com/Astronomy/www; # from Astronomy/Dockerfile.gunicorn

    # letsencrypt
    ssl_certificate /etc/letsencrypt/live/starbug.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/starbug.com/privkey.pem;

    include /etc/nginx/conf.d/aai-tls.conf;

    # letsencrypt for renewals
    location /.well-known {
	alias /opt/starbug.com/conf/letsencrypt/well-known;
    }

    # reverse proxy
    location / {

	# TODO Assumes flask container is named aai-gunicorn-00 and running on port 8080
	proxy_pass http://aai-gunicorn-00:8080/;

	# Redefine the header fields that NGINX sends to the upstream server
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Define the maximum file size on file uploads
	client_max_body_size 5M;

    }

}
