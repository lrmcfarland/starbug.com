# This builds the stabug.com nginx reverse proxy with a self signed certificate for testing
#
# Assumes: aai-gunicorn-00 is present
# Names must be coordinated with the gunicorn WSGI server. See also www/gunicorn.sh
#
# one time setup
# persistent storage: docker volume create aai-logs
# create network:     docker network create starbugnet
#
#
# to build:           docker build -f Dockerfile.nginx.selfsigned -t nginx-ss.starbug.com .
#
# to run with TLS:    docker run --net starbugnet --mount source=aai-logs,target=/opt/starbug.com/logs/nginx --name nginx-ss-00.starbug.com -v /var/run/docker.sock:/tmp/docker.sock -d -p 80:80 -p 443:443 nginx-ss.starbug.com
#
# to bash aai-logs:   docker run -it --rm --mount source=aai-logs,target=/opt/starbug.com/logs/nginx --user root --entrypoint /bin/bash nginx-ss.starbug.com
#
# force a rotation   logrotate -f /etc/logrotate.conf

FROM nginx

LABEL maintainer "lrm@starbug.com"
LABEL service "starbug.com reverse proxy with self signed certification"

RUN apt-get update && apt-get -y install logrotate

# nginx conf
COPY ./conf/starbug.nginx.conf /etc/nginx/nginx.conf

COPY ./conf/starbug.nginx.ss.conf /etc/nginx/conf.d/starbug.nginx.ss.conf
COPY ./conf/starbug.tls.conf /etc/nginx/conf.d/starbug.tls.conf

# self signed certs. /etc/ssl does not exist on default nginx
COPY ./ssl/selfsigned/certs/ /etc/ssl/certs/
COPY ./ssl/selfsigned/private/ /etc/ssl/private/

# logrotate conf
COPY ./conf/nginx.logrotate /etc/logrotate.d/nginx

# test cron job
COPY ./conf/nginx_ss_cron_test /etc/cron.hourly/nginx_ss_cron_test

# starbug.com static content
COPY ./public_html/ /opt/starbug.com/www/public_html/

# start cron and nginx
WORKDIR /root
COPY ./conf/nginx-start.sh .
CMD [ "./nginx-start.sh" ]
