# This is the conf for the nginx reverse proxy for AAI
#
# This assumes flask container is named aai-g0 and nginx aai-nginx-rs0
#
# Dockerfile.nginx copies this to /etc/nginx/conf.d/aai_nginx.conf;
#
# to run as reverse proxy for the flask AAI server running in container aai-g0:
#     docker run --name aai-nginx-rs0 --link aai-g0:aai-g0 -d -p 80:80 aai-nginx
#
# with multiple ports for TLS
#     docker run --name aai-nginx-rp0 --link aai-gunicorn-g0:aai-gunicorn-g0 -d -p 80:80 -p 443:443 aai-nginx
#


# 301 Moved Permanently
# server {
#   server_name    www.starbug.com;
#   listen         80;
#   return         301 http://$server_name;
# }

# TODO localhost?

server {

    server_name  www.starbug.com;
    listen       80;

    # see Dockerfile.nginx
    root /opt/starbug.com/www/public_html;

    # static content
    location / {
        index index.html;
    }

}


server {

    server_name  www.starbug.com;
    listen       443; # TODO was 80 fake TLS

    # for SSL
    # https://opsnotice.xyz/nginx-docker-tls-reverse-proxy/
    # listen 443 ssl http2;
    # ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;

    # reverse proxy
    location / {

	# TODO Assumes flask container is named aai-gunicorn-g0 and running on port 8080
	proxy_pass http://aai-gunicorn-g0:8080;

	# Redefine the header fields that NGINX sends to the upstream server
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Proto $scheme;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	# Define the maximum file size on file uploads
	client_max_body_size 5M;

    }

}
